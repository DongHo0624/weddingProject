<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="simulator">
	<!-- 업체번호, 코드, 업체명, 기본 가격, 전화번호, 주소, 태그, 이미지경로 -->
	<!-- 검색조건 -> 홀:지역,인원수/드레스:지역/스튜디오:지역/메이크업:지역 -->
	<select id="hSearchList" parameterType="map" resultType="hall">
		select 
			hall_no as hallNo,
			code,
			hall_name as hallName,
			hall_price as hallPrice,
			hall_tel as hallTel,
			hall_addr as hallAddr,
			hall_tag as hallTag,
			hall_path as hallPath
		from (select rownum as rnum, h.* from (select * from hall<if test="!simulator.equals('전국')"> where hall_addr like '%'||#{simulator}||'%'</if>) h)
		where rnum between ${start} and ${end}
	</select>
	<select id="hTotalCount" parameterType="simulator" resultType="_int">
		select 
			count(*)
		from 
			hall
		<if test="!weddingLoc.equals('전국')">
		where
			hall_addr like '%'||#{weddingLoc}||'%'
		</if>
	</select>
	<select id="dSearchList" parameterType="map" resultType="dress">
		select 
			dress_no as dressNo,
			code,
			dress_name as dressName,
			dress_rent_price as dressRentPrice,
			dress_tel as dressTel,
			dress_addr as dressAddr,
			dress_tag as dressTag,
			dress_filepath as dressFilepath 
		from (select rownum as rnum, d.* from (select * from dress<if test="!simulator.equals('전국')"> where dress_addr like '%'||#{simulator}||'%'</if>) d)
		where rnum between ${start} and ${end}
	</select>
	<select id="dTotalCount" parameterType="simulator" resultType="_int">
		select 
			count(*)
		from 
			dress
		<if test="!weddingLoc.equals('전국')">
		where
			dress_addr like '%'||#{weddingLoc}||'%'
		</if>
	</select>
	<select id="mSearchList" parameterType="map" resultType="makeup">
		select 
			makeup_no as makeupNo,
			code,
			makeup_name as makeupName,
			makeup_basic_price as makeupBasicPrice,
			makeup_tel as makeupTel,
			makeup_addr as makeupAddr,
			makeup_tag as makeupTag,
			makeup_filepath as makeupFilepath 
		from (select rownum as rnum, make.* from (select * from makeup<if test="!simulator.equals('전국')"> where makeup_addr like '%'||#{simulator}||'%'</if>) make)
		where rnum between ${start} and ${end}
	</select>
	<select id="mTotalCount" parameterType="simulator" resultType="_int">
		select 
			count(*)
		from 
			makeup
		<if test="!weddingLoc.equals('전국')">
		where
			makeup_addr like '%'||#{weddingLoc}||'%'
		</if>
	</select>
	<select id="stTotalCount" parameterType="simulator" resultType="_int">
		select 
			count(*)
		from 
			studio
		<if test="!weddingLoc.equals('전국')">
		where
			studio_addr like '%'||#{weddingLoc}||'%'
		</if>
	</select>
	<select id="stSearchList" parameterType="map" resultType="studio">
		select 
			studio_no as studioNo,
			code,
			studio_name as studioName,
			studio_price as studioPrice,
			studio_tel as studioTel,
			studio_addr as studioAddr,
			studio_tag as studioTag,
			studio_filepath as studioFilepath 
		from (select rownum as rnum, st.* from (select * from studio<if test="!simulator.equals('전국')"> where studio_addr like '%'||#{simulator}||'%'</if>) st)
		where rnum between ${start} and ${end}
	</select>
	<insert id="newSimulator" parameterType="simulator">
		insert into simulator values(simulator_seq.nextval,#{memberId},#{weddingDate},#{weddingLoc},#{weddingPerson},0,sysdate)
	</insert>
	<select id="simulatorNo" parameterType="simulator" resultType="_int">
		select simulator_no from (select rownum as rnum, simulator_no from (select * from simulator where member_id = #{memberId} order by simulator_date desc)) where rnum = 1
	</select>
	<insert id="newSimulatorSelect" parameterType="simulatorSelect">
		insert into simulator_select values(#{simulatorNo},#{code},#{prdNo},#{prdName},#{prdPrice},#{prdTel},#{prdLoc},#{prdTag},#{prdFilepath})
	</insert>
	<update id="updatePrice" parameterType="map">
		update simulator set simulator_total_price=#{totalPrice} where simulator_no=#{simulatorNo}
	</update>
	<select id="mySelectList" parameterType="simulator" resultType="simulatorSelect">
			select 
			simulator_no as simulatorNo,
			code as code,
			prd_no as prdNo,
			prd_name as prdName,
			prd_price as prdPrice,
			prd_tel as prdTel,
			prd_loc as prdLoc,
			prd_tag as prdTag
			from simulator_select
			where simulator_no =#{simulatorNo}
	</select>
	<select id="getSimulator" parameterType="member" resultType="simulator">
			select 
			simulator_no as simulatorNo,
			member_id as memberId,
			wedding_date as weddingDate,
			wedding_loc as weddingLoc,
			wedding_person as weddingPerson,
			simulator_total_price as simulatorTotalPrice,
			simulator_date as simulatorDate
			from simulator where member_id=#{memberId}
	</select>
	
	<!-- <select id="ajaxDressList" parameterType="map" resultType="dress">
		{call
			declear
			begin
				insert nextval;
				
				select sdkfsldkf.currval from dual;
			end
		}
		select 
			dressNo,
			code,
			dressName,
			dressRentPrice,
			dressTel,
			dressAddr,
			dressTag,
			dressFilepath
		from
			(select 
				rownum as rnum,
				d.*
			from
				(select * from dress) d
			<if test="!weddingLoc.equals('전국')">
			where
				dress_addr like '%'||#{weddingLoc}||'%'
			</if>
			)
		where rnum between #{start} and #{end}
	</select> -->
</mapper>
